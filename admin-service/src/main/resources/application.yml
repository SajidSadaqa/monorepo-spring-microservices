server:
  port: 8446
  servlet:
    context-path: /api
  ssl:
    enabled: true
    key-store: classpath:tls/admin-keystore.p12
    key-store-password: ${SSL_KEYSTORE_PASSWORD:admin123}
    key-store-type: PKCS12
    trust-store: classpath:tls/admin-truststore.p12
    trust-store-password: ${SSL_TRUSTSTORE_PASSWORD:admin123}
    trust-store-type: PKCS12

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/admin_db
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:AhmadSajidSura2003}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    locations: classpath:db/migration
    baseline-on-migrate: true
  messages:
    basename: messages
    encoding: UTF-8
  # Redis connection configuration (defaults point to docker-compose service)
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
  # Default cache configuration. TTL is in milliseconds.
  cache:
    type: redis
    redis:
      time-to-live: 600000

security:
  filter-chain:
    permit-all-patterns: /v1/admin/login,/public/**,/actuator/health,/swagger-ui/**,/v3/api-docs/**
    admin-patterns: /api/admin/**
    authorities-claim-name: roles
    authority-prefix: "ROLE_"
  jwt:
    public-key: classpath:certs/jwt-public.pem
    private-key: classpath:certs/jwt-private.pem
    access-seconds: 500
    issuer: admin-service
    expiration: 3600

s2s:
  url: https://localhost:8445
  keystore:
    path: classpath:tls/admin-keystore.p12
    password: ${SSL_KEYSTORE_PASSWORD:admin123}
  truststore:
    path: classpath:tls/user-truststore.p12
    password: ${SSL_TRUSTSTORE_PASSWORD:user123}
  audience: user-service

admin:
  username: sajidadmin
  passwordHash: $2a$12$9ZXPV7CN5E6ikXzkk9hr8OnGy9W5TmmQHHKjrGnHVxFEfqNnmLrq2

logging:
  level:
    com.microservices.admin: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.web: TRACE
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.access: DEBUG
    com.microservices.admin.infrastructure.external: DEBUG
    org.springframework.cloud.openfeign: DEBUG  # Add this
    feign: DEBUG                                 # Add this
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

