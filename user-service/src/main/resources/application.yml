server:
  port: 8445
  ssl:
    enabled: true
    key-store: classpath:tls/user-keystore.p12
    key-store-password: user123
    key-store-type: PKCS12

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/users_db
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:AhmadSajidSura2003}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.jdbc.time_zone: UTC
  flyway:
    locations: classpath:db/migration
    baseline-on-migrate: true
  # Redis connection configuration (defaults point to docker-compose service)
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
  # Default cache configuration. TTL is in milliseconds.
  cache:
    type: redis
    redis:
      time-to-live: 600000
  servlet:
    multipart:
        max-file-size: 10MB
        max-request-size: 10MB
security:
  jwt:
    public-key: classpath:certs/jwt-public.pem
    issuer: admin-service
    expiration: 3600
    access-seconds: 900
    refresh-seconds: 604800
    hmac-secret: "0123456789ABCDEF0123456789ABCDEF"
  filter-chain:
    permit-all-patterns:
      - "/api/public/**"
      - "/actuator/health"
      - "/swagger-ui/**"
      - "/v3/api-docs/**"
      - "/api/v1/admin/login"    # ‚Üê Add this line
    admin-patterns:
      - "/api/admin/**"
    authorities-claim-name: roles
    authority-prefix: "ROLE_"

admin-service:
  url: https://localhost:8446
  trust-store: classpath:tls/admin-truststore.p12
  trust-store-password: user123

logging:
  level:
    com.example.user: DEBUG
    com.microservices.user: DEBUG  # Add this if your package is different
    com.example.user.application.service: INFO
    com.example.user.infrastructure.security: DEBUG
    org.springframework.security: DEBUG  # Change from INFO to DEBUG
    org.springframework.web: DEBUG       # Change from INFO to DEBUG
    org.springframework.transaction: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: logs/user-service.log
    max-size: 100MB
    max-history: 30

minio:
  endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:minioadmin}
  secret-key: ${MINIO_SECRET_KEY:minioadmin}
  bucket-name: ${MINIO_BUCKET_NAME:uploads}
